%% Common project erlang options.
{erl_opts, [

    % mandatory
    debug_info,
    warnings_as_errors,
    warn_export_all,
    warn_missing_spec,
    warn_untyped_record,
    warn_export_vars,

    % by default
    warn_unused_record,
    warn_bif_clash,
    warn_obsolete_guard,
    warn_unused_vars,
    warn_shadow_vars,
    warn_unused_import,
    warn_unused_function,
    warn_deprecated_function

    % at will
    % bin_opt_info
    % no_auto_import
    % warn_missing_spec_all
]}.

%% Common project dependencies.
{deps, [
    {jsx, "3.0.0"},
    {jose, "1.11.1"},
    {thrift,
        {git, "https://github.com/rbkmoney/thrift_erlang.git",
            {branch, "master"}
        }
    },
    {genlib,
        {git, "https://github.com/rbkmoney/genlib.git",
            {branch, "master"}
        }
    },
    {woody,
        {git, "https://github.com/rbkmoney/woody_erlang.git",
            {branch, "master"}
        }
    },
    {woody_user_identity,
        {git, "https://github.com/rbkmoney/woody_erlang_user_identity.git",
            {branch, "master"}
        }
    },
    {token_keeper_proto,
        {git, "https://github.com/rbkmoney/token-keeper-proto.git",
            {branch, "master"}
        }
    },
    {scoper,
        {git, "https://github.com/rbkmoney/scoper.git",
            {branch, "master"}
        }
    },
    {erl_health,
        {git, "https://github.com/rbkmoney/erlang-health.git",
            {branch, "master"}
        }
    },
    {bouncer_client,
        {git, "https://github.com/rbkmoney/bouncer_client_erlang.git",
            {branch, master}
        }
    },

    % Production-only deps.
    % Defined here for the sake of rebar-locking.
    {recon, "2.5.1"},
    {logger_logstash_formatter,
        {git, "https://github.com/rbkmoney/logger_logstash_formatter.git",
            {branch, "master"}
        }
    },
    {how_are_you,
        {git, "https://github.com/rbkmoney/how_are_you.git",
            {branch, "master"}
        }
    }

]}.

%% Helpful plugins.
{plugins, [
  {rebar3_lint, "0.3.0"},
  {erlfmt, "0.10.0"}
]}.

%% Linter config.
{elvis, [
    #{
        dirs => ["src"],
        filter => "*.erl",
        ruleset => erl_files,
        rules => [
            {elvis_text_style, line_length, #{limit => 120, skip_comments => false}},
            % Too opinionated
            {elvis_style, state_record_and_type, disable},
            {elvis_style, invalid_dynamic_call, #{
                ignore => [
                    % Implements parts of logger duties, including message formatting.
                    tk_audit_log
                ]
            }}
        ]
    },
    #{
        dirs => ["test"],
        filter => "*.erl",
        ruleset => erl_files,
        rules => [
            {elvis_text_style, line_length, #{limit => 120, skip_comments => false}},
            % We want to use `ct:pal/2` and friends in test code.
            {elvis_style, no_debug_call, disable},
            % Assert macros can trigger use of ignored binding, yet we want them for better
            % readability.
            {elvis_style, used_ignored_variable, disable},
            % Tests are usually more comprehensible when a bit more verbose.
            {elvis_style, dont_repeat_yourself, #{min_complexity => 20}},
            % Too opionated
            {elvis_style, state_record_and_type, disable}
        ]
    },
    #{
        dirs => ["."],
        filter => "Makefile",
        ruleset => makefiles
    },
    #{
        dirs => ["."],
        filter => "rebar.config",
        rules => [
            {elvis_text_style, line_length, #{limit => 120, skip_comments => false}},
            {elvis_text_style, no_tabs},
            {elvis_text_style, no_trailing_whitespace}
        ]
    },
    #{
        dirs => ["src"],
        filter => "*.app.src",
        rules => [
            {elvis_text_style, line_length, #{limit => 120, skip_comments => false}},
            {elvis_text_style, no_tabs},
            {elvis_text_style, no_trailing_whitespace}
        ]
    }
]}.

{elvis_output_format, colors}.

%% XRef checks
{xref_checks, [
    undefined_function_calls,
    undefined_functions,
    deprecated_functions_calls,
    deprecated_functions
]}.
% at will
% {xref_warnings, true}.

%% Tests
{cover_enabled, true}.

%% Dialyzer static analyzing
{dialyzer, [
    {warnings, [
        % mandatory
        unmatched_returns,
        error_handling,
        race_conditions,
        unknown
    ]},
    {plt_apps, all_deps}
]}.

{profiles, [
    {prod, [
        %% Relx configuration
        {relx, [
            {release, {token_keeper , "0.1.0"}, [
                {recon        ,             load}, % tools for introspection
                {runtime_tools,             load}, % debugger
                {tools        ,             load}, % profiler
                {logger_logstash_formatter, load}, % logger formatter
                how_are_you,
                token_keeper
            ]},
            {sys_config, "./config/sys.config"},
            {vm_args, "./config/vm.args"},
            {mode, minimal},
            {extended_start_script, true}
        ]}
    ]},
    {test, [
        {cover_enabled, true},
        {deps, []}
    ]}
]}.

{shell, [
  % {config, "config/sys.config"},
    {apps, [token_keeper]}
]}.

{erlfmt, [
    {print_width, 120},
    {files, "{src,test}/*.{hrl,erl,src}"}
]}.
